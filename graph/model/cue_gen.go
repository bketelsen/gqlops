// Code generated by gocode.Generate; DO NOT EDIT.

package model

import (
	"fmt"

	"cuelang.org/go/cue"
	"cuelang.org/go/encoding/gocode/gocodec"
)

var cuegenvalProfile = cuegenMake("Profile", &Profile{})

// Validate validates x.
func (x *Profile) Validate() error {
	return cuegenCodec.Validate(cuegenvalProfile, x)
}

// Complete completes x.
func (x *Profile) Complete() error {
	return cuegenCodec.Complete(cuegenvalProfile, x)
}

var cuegenCodec, cuegenInstance = func() (*gocodec.Codec, *cue.Instance) {
	var r *cue.Runtime
	r = &cue.Runtime{}
	instances, err := r.Unmarshal(cuegenInstanceData)
	if err != nil {
		panic(err)
	}
	if len(instances) != 1 {
		panic("expected encoding of exactly one instance")
	}
	return gocodec.New(r, nil), instances[0]
}()

// cuegenMake is called in the init phase to initialize CUE values for
// validation functions.
func cuegenMake(name string, x interface{}) cue.Value {
	f, err := cuegenInstance.LookupField(name)
	if err != nil {
		panic(fmt.Errorf("could not find type %q in instance", name))
	}
	v := f.Value
	if x != nil {
		w, err := cuegenCodec.ExtractType(x)
		if err != nil {
			panic(err)
		}
		v = v.Unify(w)
	}
	return v
}

// Data size: 285 bytes.
var cuegenInstanceData = []byte("\x01\x1f\x8b\b\x00\x00\x00\x00\x00\x00\xffD\x8e\xc1J\xf3@\x14F\xef\x97\u61ffCu\xe1^\x18\xb2\xb1\x05It%\x14\vJ\x8b\xe0F\x8a[q1\x8d\xd7th2\x133\u04c5\x8a\v\xb5V\xdf\u0247\x1bI\xa9\xb8\xfb8\x87{9;\xe13B\x14\xbe\b\xe1\x8d\xe8$\xbcv\x80\x9e6\xce+\x93\xf3Dy\xd5rt\x10_[\xeb\x11\x11\xe2\xa9\xf2s\xf4\b\xff.t\xc9\x0eaMD\xfb\xe1#\x02von\xf3%\xa7\xf7\xba\xdc^\xae\taE\xd4\x0f\xef\x1d\xe0\xff\x1f_\x11\"\xc4W\xaa\xe2\xf6Q\xbc\x81\x82\x88\xc2w\x1b\x02\xe0\xa0\xd0~\xbe\x9c\xa5\xb9\xad\xb2\u0642=\x97\x8eMV<\x94\xb6vY\u0468z\x9eU\xf6\x8eK\x00{\x9b\x91\xfd&\xa7\xf9\x92\xd1\xd4*_\xa8\x82\xe5\xc6\t\xa1\xab\xda6^&\xce7\xda\x14.\x11b\xda\xd86g(\x9fE\xb7\xed\x18\u02adK\xc7\xd6x\xa5\x8d;7\x8f\xfd\xe4)\x19\x88\xee\xe5d(\xa5<\x1d\x1d\x1f\x89\x17yV\xd8\xfean\xab\xbad\u03e3\xf1v\f\x04\xd1O\x00\x00\x00\xff\xff3\xb8\xfaUJ\x01\x00\x00")
